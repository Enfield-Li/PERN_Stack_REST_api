generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id           Int            @id() @default(autoincrement())
  createdAt    DateTime       @default(now()) @db.Timestamp(6)
  updatedAt    DateTime       @default(now()) @db.Timestamp(6)
  username     String         @unique() @db.VarChar
  email        String         @unique() @db.VarChar
  password     String         @db.VarChar
  postAmounts  Int            @default(0)
  post         post[]
  interactions interactions[]
  comments     comments[]
}

model post {
  id             Int            @id() @default(autoincrement())
  createdAt      DateTime       @default(now()) @db.Timestamp(6)
  updatedAt      DateTime       @default(now()) @db.Timestamp(6)
  title          String         @db.VarChar
  content        String?        @db.VarChar
  uesrId         Int
  voteCount      Int            @default(0)
  votePoints     Int            @default(0)
  likePoints     Int            @default(0)
  confusedPoints Int            @default(0)
  laughPoints    Int            @default(0)
  user           user           @relation(fields: [uesrId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  interactions   interactions[]
  comments       comments[]
}

model interactions {
  voteStatus     Boolean?
  likeStatus     Boolean?
  laughStatus    Boolean?
  confusedStatus Boolean?
  createdAt      DateTime @default(now()) @db.Timestamp(6)
  userId         Int
  postId         Int
  post           post     @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user           user     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([userId, postId])
}

model comments {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now()) @db.Timestamp(6)
  updatedAt    DateTime @default(now()) @db.Timestamp(6)
  comment_text String   @db.VarChar
  parentId     Int?
  userId       Int
  postId       Int
  post         post     @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user         user     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
}
